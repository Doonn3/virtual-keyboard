(()=>{"use strict";const t=["ArrowUp","ArrowLeft","ArrowDown","ArrowRight"],e=["F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","AltRight","AltLeft","CapsLock","Tab","ControllLeft","ControllRight","Meta","ShiftLeft","ShiftRight"];class a{static current=new a;#t=null;subscribe(t){this.#t=t}emit(t){"function"==typeof this.#t&&this.#t(t)}}const n=a,i=["Backspace","Tab","Delete","CapsLock","Enter","ShiftLeft","ShiftRight","ControlLeft","ControlRight","MetaLeft","AltLeft","AltRight"],s=function(t){const{id:e,key:a,dataEng:n,dataRus:s}=t,d=e===i.find((t=>t===e))?"medium":"Space"===e?"large":"";return`\n    <div id="${e}" class="btn ${d}" data-key-eng="${n}" data-key-rus="${s}">\n        <span class="btn__key">${a}</span>\n    </div>\n    `},d=class{#e=!1;#a=!1;#n=!1;get IsUpperCase(){return this.#n}down(t){return"Shift"===t&&(this.#a=!0),"CapsLock"===t&&(this.#e=!this.#e),this.#e?this.#n=!0:this.#n=!1,!1===this.#e&&!0===this.#a&&(this.#n=!0),this}up(){return this.#a&&!1===this.#e&&(this.#n=!1,this.#a=!1),this}},r=class{#i=["Backspace","Delete","Enter","Tab"];#s=["ShiftLeft","ShiftRight","CapsLock","ControlLeft","ControlRight","AltLeft","AltRight","MetaLeft","MetaRight"];constructor(t){this.input=t}execute(t){if(!(t instanceof KeyboardEvent)&&"object"!=typeof t)return;const{key:e,code:a}=t;if(this.#s.includes(a))return;const n=this.#i.find((t=>t===a));n?this.#d(n):this.#r(e)}#d(t){switch(t){case"Backspace":this.#o();break;case"Tab":this.#u();break;case"Delete":this.#c();break;case"Enter":this.#h()}}#l=null;#r(t){if(!(this.input instanceof HTMLTextAreaElement))return;this.#l=this.input.selectionStart;const e=this.input.value.slice(0,this.#l),a=this.input.value.slice(this.#l);this.input.value=e+t+a,this.input.setSelectionRange(this.#l+1,this.#l+1)}#h(){if(!(this.input instanceof HTMLTextAreaElement))return;const t=this.input.selectionStart,e=this.input.value.slice(0,t),a=this.input.value.slice(t);this.input.value=`${e}\n${a}`,this.input.setSelectionRange(t+1,t+1)}#o(){if(!(this.input instanceof HTMLTextAreaElement))return;const t=this.input.selectionStart,e=this.input.selectionEnd,a=this.input.value.slice(0,t),n=this.input.value.slice(e);t===e?(this.input.value=a.slice(0,-1)+n,this.input.setSelectionRange(t-1,t-1)):(this.input.value=a+n,this.input.setSelectionRange(t,t))}#u(){if(!(this.input instanceof HTMLTextAreaElement))return;const t=this.input.selectionStart,e=this.input.value.slice(0,t),a=this.input.value.slice(t);this.input.value=`${e}    ${a}`,this.input.setSelectionRange(t+4,t+4)}#c(){if(!(this.input instanceof HTMLTextAreaElement))return;const t=this.input.selectionStart,e=this.input.selectionEnd,a=this.input.value.slice(0,t),n=this.input.value.slice(e);t===e?(this.input.value=a+n.slice(1),this.input.setSelectionRange(t,t)):(this.input.value=a+n,this.input.setSelectionRange(t,t))}};document.body.insertAdjacentHTML("beforeend",'<div id="app"></div>');const o=document.querySelector("#app"),u=new class{#y;#g=!0;init(){const t=document.querySelector(".text-area");this.#y=new r(t),t.addEventListener("keydown",this.handlerTextArea),t.addEventListener("keyup",this.handlerTextAreaUp),t.focus(),t.addEventListener("blur",(()=>{t.focus()})),n.current.subscribe(this.#p)}render(){return'<textarea class="text-area"></textarea>'}#k=!1;#p=t=>{this.#k||this.#y instanceof r&&this.#y.execute(t)};handlerTextArea=e=>{if(!(e instanceof KeyboardEvent))return;const{code:a}=e;t.includes(a)?this.#k=!0:"F12"!==e.key&&e.preventDefault()};handlerTextAreaUp=t=>{this.#k=!1,t.preventDefault()}};o.insertAdjacentHTML("beforeend",u.render()),u.init();const c=new class{#f=new class{#E={curr:localStorage.getItem("Language")||"eng",switch(){"eng"===this.curr?this.curr="rus":this.curr="eng"}};get Language(){return this.#E.curr}execute(t){return t instanceof KeyboardEvent&&!(!t.shiftKey||!t.ctrlKey)&&(this.#E.switch(),localStorage.setItem("Language",this.#E.curr),!0)}};#R=new d;#w=new class{#C=null;#m;#$=[];#b={curr:"data-key-eng",switch(t){this.curr=`data-key-${t}`}};constructor(t){t instanceof d&&(this.#m=t)}init(){this.#C=document.querySelector(".virtual-keyboard"),this.#$=[...document.querySelectorAll(".btn")],this.#C.addEventListener("mousedown",this.#v),this.#C.addEventListener("mouseup",this.#S)}render(){return`\n        <section class="virtual-keyboard">\n            <div class="virtual-keyboard__draw-row">\n            ${s({id:"Backquote",key:"`",dataEng:"`~",dataRus:"ёЁ"})}\n            ${s({id:"Digit1",key:"1",dataEng:"1!",dataRus:"1!"})}\n            ${s({id:"Digit2",key:"2",dataEng:"2@",dataRus:"2&quot;"})}\n            ${s({id:"Digit3",key:"3",dataEng:"3#",dataRus:"3№"})}\n            ${s({id:"Digit4",key:"4",dataEng:"4$",dataRus:"4;"})}\n            ${s({id:"Digit5",key:"5",dataEng:"5%",dataRus:"5%"})}\n            ${s({id:"Digit6",key:"6",dataEng:"6^",dataRus:"6:"})}\n            ${s({id:"Digit7",key:"7",dataEng:"7&",dataRus:"7?"})}\n            ${s({id:"Digit8",key:"8",dataEng:"8*",dataRus:"8*"})}\n            ${s({id:"Digit9",key:"9",dataEng:"9(",dataRus:"9("})}\n            ${s({id:"Digit0",key:"0",dataEng:"0)",dataRus:"0)"})}\n            ${s({id:"Minus",key:"-",dataEng:"-_",dataRus:"-_"})}\n            ${s({id:"Equal",key:"=",dataEng:"=+",dataRus:"=+"})}\n            ${s({id:"Backspace",key:"Backspace",dataEng:"Backspace",dataRus:"Backspace"})}\n            </div>\n\n            <div class="virtual-keyboard__draw-row">\n            ${s({id:"Tab",key:"Tab",dataEng:"Tab",dataRus:"Tab"})}\n            ${s({id:"KeyQ",key:"q",dataEng:"qQ",dataRus:"йЙ"})}\n            ${s({id:"KeyW",key:"w",dataEng:"wW",dataRus:"цЦ"})}\n            ${s({id:"KeyE",key:"e",dataEng:"eE",dataRus:"уУ"})}\n            ${s({id:"KeyR",key:"r",dataEng:"rR",dataRus:"кК"})}\n            ${s({id:"KeyT",key:"t",dataEng:"tT",dataRus:"еЕ"})}\n            ${s({id:"KeyY",key:"y",dataEng:"yY",dataRus:"нН"})}\n            ${s({id:"KeyU",key:"u",dataEng:"uU",dataRus:"гГ"})}\n            ${s({id:"KeyI",key:"i",dataEng:"iI",dataRus:"шШ"})}\n            ${s({id:"KeyO",key:"o",dataEng:"oO",dataRus:"щЩ"})}\n            ${s({id:"KeyP",key:"p",dataEng:"pP",dataRus:"зЗ"})}\n            ${s({id:"BracketLeft",key:"[",dataEng:"[{",dataRus:"хХ"})}\n            ${s({id:"BracketRight",key:"]",dataEng:"]}",dataRus:"ъЪ"})}\n            ${s({id:"Backslash",key:"\\",dataEng:"\\|",dataRus:"\\/"})}\n            ${s({id:"Delete",key:"Del",dataEng:"Delete",dataRus:"Delete"})}\n            </div>\n\n            <div class="virtual-keyboard__draw-row">\n            ${s({id:"CapsLock",key:"CapsLock",dataEng:"CapsLock",dataRus:"CapsLock"})}\n            ${s({id:"KeyA",key:"a",dataEng:"aA",dataRus:"фФ"})}\n            ${s({id:"KeyS",key:"s",dataEng:"sS",dataRus:"ыЫ"})}\n            ${s({id:"KeyD",key:"d",dataEng:"dD",dataRus:"вВ"})}\n            ${s({id:"KeyF",key:"f",dataEng:"fF",dataRus:"аА"})}\n            ${s({id:"KeyG",key:"g",dataEng:"gG",dataRus:"пП"})}\n            ${s({id:"KeyH",key:"h",dataEng:"hH",dataRus:"рР"})}\n            ${s({id:"KeyJ",key:"j",dataEng:"jJ",dataRus:"оО"})}\n            ${s({id:"KeyK",key:"k",dataEng:"kK",dataRus:"лЛ"})}\n            ${s({id:"KeyL",key:"l",dataEng:"lL",dataRus:"дД"})}\n            ${s({id:"Semicolon",key:";",dataEng:";:",dataRus:"жЖ"})}\n            ${s({id:"Quote",key:"&sbquo;",dataEng:"&sbquo;;&quot;",dataRus:"эЭ"})}\n            ${s({id:"Enter",key:"Enter",dataEng:"Enter",dataRus:"Enter"})}\n            </div>\n\n            <div class="virtual-keyboard__draw-row">\n            ${s({id:"ShiftLeft",key:"Shift",dataEng:"ShiftLeft",dataRus:"ShiftLeft"})}\n            ${s({id:"KeyZ",key:"z",dataEng:"zZ",dataRus:"яЯ"})}\n            ${s({id:"KeyX",key:"x",dataEng:"xX",dataRus:"чЧ"})}\n            ${s({id:"KeyC",key:"c",dataEng:"cC",dataRus:"сС"})}\n            ${s({id:"KeyV",key:"v",dataEng:"vV",dataRus:"мМ"})}\n            ${s({id:"KeyB",key:"b",dataEng:"bB",dataRus:"иИ"})}\n            ${s({id:"KeyN",key:"n",dataEng:"nN",dataRus:"тТ"})}\n            ${s({id:"KeyM",key:"m",dataEng:"mM",dataRus:"ьЬ"})}\n            ${s({id:"Comma",key:",",dataEng:",<",dataRus:"бБ"})}\n            ${s({id:"Period",key:".",dataEng:".>",dataRus:"юЮ"})}\n            ${s({id:"Slash",key:"/",dataEng:"/?",dataRus:".,"})}\n            ${s({id:"ArrowUp",key:"⬆",dataEng:"⬆",dataRus:"⬆"})}\n            ${s({id:"ShiftRight",key:"Shift",dataEng:"ShiftRight",dataRus:"ShiftRight"})}\n            </div>\n\n            <div class="virtual-keyboard__draw-row">\n            ${s({id:"ControlLeft",key:"Ctrl",dataEng:"Ctrl",dataRus:"Ctrl"})}\n            ${s({id:"MetaLeft",key:"Win",dataEng:"Win",dataRus:"Win"})}\n            ${s({id:"AltLeft",key:"Alt",dataEng:"Alt",dataRus:"Alt"})}\n            ${s({id:"Space",key:" ",dataEng:" ",dataRus:" "})}\n            ${s({id:"AltRight",key:"Alt",dataEng:"Alt",dataRus:"Alt"})}\n            ${s({id:"ArrowLeft",key:"⬅",dataEng:"⬅",dataRus:"⬅"})}\n            ${s({id:"ArrowDown",key:"⬇",dataEng:"⬇",dataRus:"⬇"})}\n            ${s({id:"ArrowRight",key:"⮕",dataEng:"⮕",dataRus:"⮕"})}\n            ${s({id:"ControlRight",key:"Ctrl",dataEng:"Ctrl",dataRus:"Ctrl"})}\n            </div>\n        </section>\n        `}#L=null;isUpprecase=!1;#v=t=>{const{target:e}=t,a=e.closest(".btn");if(null===a)return;this.#L=a;const i=a.getAttribute("id"),s=a.querySelector(".btn__key").textContent;this.#m instanceof d&&(this.#m.down(s).IsUpperCase?this.upperCase():this.lowerCase()),this.keyIllumination(i),n.current.emit({code:i,key:s})};#S=()=>{null!==this.#L&&void 0!==this.#L&&(this.#m.up().IsUpperCase||this.lowerCase(),this.keyIlluminationOff(),this.#L=null)};downKey(t){if(!(t instanceof KeyboardEvent))return;const{code:e}=t,a=this.#$.find((t=>t.id===e));if(a){const t=a.querySelector(".btn__key").textContent;n.current.emit({code:e,key:t})}}keyIllumination(t){const e=this.#$.find((e=>e.id===t));e&&e.classList.toggle("pressed--button")}keyIlluminationOff(t="CapsLock"){this.#$.forEach((e=>{e.id!==t&&e.classList.remove("pressed--button")}))}upperCase(){this.#$.forEach((t=>{if(this.#A(t.id))return;const e=t.getAttribute(`${this.#b.curr}`).split("");t.querySelector(".btn__key").textContent=e[1]}))}lowerCase(){this.#$.forEach((t=>{if(this.#A(t.id))return;const e=t.getAttribute(`${this.#b.curr}`).split("");t.querySelector(".btn__key").textContent=e[0]}))}changeLanguage(t){let e=t;void 0===t&&(e="eng"),"eng"!==t&&"rus"!==t&&(e="eng"),this.#$.forEach((t=>{if(this.#A(t.id))return;const a=t.getAttribute(`data-key-${e}`).split("");t.querySelector(".btn__key").textContent=a[0]})),this.#b.switch(e)}#A(t){return!!["Backspace","Tab","Delete","CapsLock","Enter","ShiftLeft","ShiftRight","ControlLeft","ControlRight","MetaLeft","AltLeft","AltRight","ArrowLeft","ArrowUp","ArrowDown","ArrowRight"].includes(t)}}(this.#R);init(){this.#w.init(),this.#w.changeLanguage(this.#f.Language)}render(){return this.#w.render()}#K=null;handlerDownKey(t){if(!(t instanceof KeyboardEvent))return;this.#K!==t.code&&this.#w.keyIllumination(t.code),this.#K=t.code;const e=this.#R.down(t.key).IsUpperCase;e?(this.#w.upperCase(),this.#w.isUpprecase=e):this.#w.lowerCase(),this.#f.execute(t)&&this.#w.changeLanguage(this.#f.Language),this.#w.downKey(t)}handlerUpKey(t){if(!(t instanceof KeyboardEvent))return;if(null===this.#K)return;const e=this.#R.up().IsUpperCase;e||(this.#w.lowerCase(),this.#w.isUpprecase=e),this.#w.keyIlluminationOff(),this.#K=null}};o.insertAdjacentHTML("beforeend",c.render()),c.init(),o.insertAdjacentHTML("beforeend",`<p class="text">${"Клавиатура создана в операционной системе Windows\nДля переключения языка комбинация: Ctrl + Shift"}</>`);const h=["Tab","Shift","Alt","Meta"];window.addEventListener("keydown",(t=>{e.includes(t.code)&&t.preventDefault(),t instanceof KeyboardEvent&&(h.includes(t.key)&&t.preventDefault(),c.handlerDownKey(t))})),window.addEventListener("keyup",(t=>{t.preventDefault(),t instanceof KeyboardEvent&&c.handlerUpKey(t)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,